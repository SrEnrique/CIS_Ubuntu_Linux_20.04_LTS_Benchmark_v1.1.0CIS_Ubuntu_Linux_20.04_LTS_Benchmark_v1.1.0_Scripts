#!/bin/sh

# Autor: Luis Enrique Gastelum
# ** Autogenerated **

test_wrapper() {
	#local 
    ref=$1
	shift
	#local 
    message=$1
	shift
	#local 
    score=$1
	shift
	#local 
    server=$1
	shift
	#local 
    workstation=$1

	RED="\033[0;31m"
	GREEN="\033[0;32m"
	YELLOW="\033[1;33m"
	NC="\033[0m"

	# -- count the totals for the baseline
	if [ "$score" = "Yes" ]; then
        
		if [ "$server" = "Server1" ]; then
			score_server1_total=$((score_server1_total+1))
		fi
		if [ "$server" = "Server1"  ] || [ "$server" = "Server2" ]; then
			score_server2_total=$((score_server2_total+1))
		fi
		if [ "$workstation" = "Workstation1" ]; then
			score_workstation1_total=$((score_workstation1_total+1))
		fi
		if [ "$workstation" = "Workstation1" ] || [ "$workstation" = "Workstation2" ]; then
			score_workstation2_total=$((score_workstation2_total+1))
		fi
	else
        
		if [ "$server" = "Server1" ]; then
			noscore_server1_total=$((noscore_server1_total+1))
		fi
		if [ "$server" = "Server1" ] || [ "$server" = "Server2" ]; then
			noscore_server2_total=$((noscore_server2_total+1))
		fi
		if [ "$workstation" = "Workstation1" ]; then
			noscore_workstation1_total=$((noscore_workstation1_total+1))
		fi
		if [ "$workstation" = "Workstation1" ] || [ "$workstation" = "Workstation2" ]; then
			noscore_workstation2_total=$((noscore_workstation2_total+1))
		fi
	fi

	if [ -f ./tester/${ref}.sh ]; then
		bash ./tester/${ref}.sh ${args} > /dev/null 2>/dev/null
		if [ "$?" -eq 0 ]; then
			echo "${GREEN}PASS${NC} - $ref - ${message}"
			
			# -- count the success for the baseline
			if [ "$score" = "Yes" ]; then
				if [ "$server" = "Server1" ]; then
					score_server1_ok=$((score_server1_ok+1))
				fi
				if [ "$server" = "Server1" ] || [ "$server" = "Server2" ]; then
					score_server2_ok=$((score_server2_ok+1))
				fi
				if [ "$workstation" = "Workstation1" ]; then
					score_workstation1_ok=$((score_workstation1_ok+1))
				fi
				if [ "$workstation" = "Workstation1" ] || [ "$workstation" = "Workstation2" ]; then
					score_workstation2_ok=$((score_workstation2_ok+1))
				fi
			else
				if [ "$server" = "Server1" ]; then
					noscore_server1_ok=$((noscore_server1_ok+1))
				fi
				if [ "$server" = "Server1" ] || [ "$server" = "Server2" ]; then
					noscore_server2_ok=$((noscore_server2_ok+1))
				fi
				if [ "$workstation" = "Workstation1" ]; then
					noscore_workstation1_ok=$((noscore_workstation1_ok+1))
				fi
				if [ "$workstation" = "Workstation1" ] || [ "$workstation" = "Workstation2" ]; then
					noscore_workstation2_ok=$((noscore_workstation2_ok+1))
				fi
			fi
		else
			echo "${RED}FAIL${NC} - $ref - ${message}"
		fi
	else
		echo "${YELLOW}SKIP${NC} - $ref - ${message}"
	fi
}

if [ $(whoami) != "root" ]; then
        echo "You must run this script as root"
        exit 1
fi

echo "CIS Ubuntu Linux 20.04 LTS Benchmark"
echo "v1.1.0 - 03-31-2021"
echo
echo "System information"
echo hostname : `hostname`
echo `lsb_release -i`
echo `lsb_release -d`
echo `lsb_release -r`
echo time     : `date`


echo =========================================

test_wrapper 1.1.1.1 "Ensure mounting of cramfs filesystems is disabled (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.1.2 "Ensure mounting of freevxfs filesystems is disabled (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.1.3 "Ensure mounting of jffs2 filesystems is disabled (Automated)"  Yes Server1 Workstation1 
test_wrapper 1.1.1.4 "Ensure mounting of hfs filesystems is disabled (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.1.5 "Ensure mounting of hfsplus filesystems is disabled (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.1.6 "Ensure mounting of squashfs filesystems is disabled (Manual)" No Server2 Workstation2
test_wrapper 1.1.1.7 "Ensure mounting of udf filesystems is disabled (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.2 "Ensure /tmp is configured (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.3 "Ensure nodev option set on /tmp partition (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.4 "Ensure nosuid option set on /tmp partition (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.5 "Ensure noexec option set on /tmp partition (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.6 "Ensure /dev/shm is configured (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.7 "Ensure nodev option set on /dev/shm partition (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.8 "Ensure nosuid option set on /dev/shm partition (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.9 "Ensure noexec option set on /dev/shm partition (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.10 "Ensure separate partition exists for /var (Automated)" Yes Server2 Workstation2
test_wrapper 1.1.11 "Ensure separate partition exists for /var/tmp (Automated)" Yes Server2 Workstation2
test_wrapper 1.1.12 "Ensure /var/tmp partition includes the nodev option (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.13 "Ensure /var/tmp partition includes the nosuid option (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.14 "Ensure /var/tmp partition includes the noexec option (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.15 "Ensure separate partition exists for /var/log (Automated)" Yes Server2 Workstation2
test_wrapper 1.1.16 "Ensure separate partition exists for /var/log/audit (Automated)" Yes Server2 Workstation2
test_wrapper 1.1.17 "Ensure separate partition exists for /home (Automated)" Yes Server2 Workstation2
test_wrapper 1.1.18 "Ensure /home partition includes the nodev option (Automated)" Yes Server1 Workstation2
test_wrapper 1.1.19 "Ensure nodev option set on removable media partitions (Manual)" No Server1 Workstation1
test_wrapper 1.1.20 "Ensure nosuid option set on removable media partitions (Manual)" No Server1 Workstation1
test_wrapper 1.1.21 "Ensure noexec option set on removable media partitions (Manual)" No Server1 Workstation1
test_wrapper 1.1.22 "Ensure sticky bit is set on all world-writable directories (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.23 "Disable Automounting (Automated)" Yes Server1 Workstation1
test_wrapper 1.1.24 "Disable USB Storage (Automated)" Yes Server1 Workstation1


echo
echo Results
echo
echo "Scored (Server)"
echo ==================
echo Server 1 = $score_server1_ok / $score_server1_total
echo Server 2 = $score_server2_ok / $score_server2_total

echo
echo "Scored (Workstation)"
echo ==================
echo Workstation 1 = $score_workstation1_ok / $score_workstation1_total
echo Workstation 2 = $score_workstation2_ok / $score_workstation2_total

echo
echo "Not Scored (Server)"
echo ==================
echo Server 1 = $noscore_server1_ok / $noscore_server1_total
echo Server 2 = $noscore_server2_ok / $noscore_server2_total
echo
echo "Not Scored (Workstation)"
echo ==================
echo Workstation 1 = $noscore_workstation1_ok / $noscore_workstation1_total
echo Workstation 2 = $noscore_workstation2_ok / $noscore_workstation2_total